
BOOTY THE REMAKE
================

EN CURSO:
--------------------------------------------------------------------------------
- Efectos de sonido
- Chequeo de memoria libre
- Mapa completo del barco (usar excel)


PENDIENTE:
--------------------------------------------------------------------------------
- Bombas al recoger objetos
- Tiles animados
- Tiles que aparecen y desaparecen
- Plataformas
- Ratas y loros
- Jim respira
- Música y efectos de sonido definitivos
- Eliminación de flickering


MEJORAS:
--------------------------------------------------------------------------------
- 1 frame más para animación de pirata
- Render por interrupciones


IMPLEMENTADO:
--------------------------------------------------------------------------------
- (20/09/16) Movimientos del sprite principal
- (25/09/16) Sprite enemigo lineal X
- (02/10/16) Múltiples sprites enemigos lineales X/Y
- (06/10/16) Sistema de colisiones con los sprites enemigos
- (08/10/16) Optimización del tamaño de pantalla de juego
- (25/10/16) Manejo de caracteres alfanuméricos propios
- (30/10/16) Elección de color transparente para máscaras
- (11/12/16) Enemigos mueren y desaparecen con explosión
- (23/12/16) Gestión de vidas restantes, puntos y gameover
- (24/12/16) Colocador de enemigos por pantalla
- (15/01/17) Tres instancias de enemigos por pantalla
- (03/02/17) Configurar teclado y Joystick
- (08/02/17) Tipo de enemigo NULL
- (18/02/17) Escaleras para el sprite principal
- (26/03/17) Topes XY para los enemigos
- (05/04/17) Tile que detiene a Jim en el eje X
- (13/08/20) Reconfigurar teclas / Adaptar menú principal para ello
- (14/08/20) Música y sonido de pruebas (Robbie)
- (15/08/20) Comprimir pantallas
--------------------------------------------------------------------------------
- (10/05/23) Limpieza y adptación de RedPlanet2 a Booty
- (10/05/23) Movimientos del player
- (12/05/23) Tamaño mínimo de mapa
- (15/05/23) Sprites de 14x16
- (26/05/23) Pantalla de carga
- (02/06/23) Modificar mapa TILED desde código
- (08/07/23) Font
- (09/07/23) Menú inicial
- (12/07/23) Diseño definitivo de la zona de marcadores
- (14/07/23) Lógica de puertas y llaves
- (20/07/23) Lógica de objetos
- (25/07/23) Objetos en el tileset
    - bolsa de oro
    - cofre
    - campana
    - sable
    - jarrón
    - pistola
    - sextante
    - catalejo
    - libro
    - pergamino
    - candelabro
- (28/07/23) Decoraciones del mapa en el tileset
    - eskeleto
    - puerta frontal
    - antorcha
    - telaraña
    - caja
    - barril
    - ojo de buey
- (29/07/23) Puertas frontales y cambio de mapa





NOTAS:
--------------------------------------------------------------------------------
Compresión de pantallas:

- Editar el archivo "tilemap_conversion.mk" y añadir las líneas...
    $(eval $(call TMX2DATA,SET_OUTPUTS,h bin))
    $(eval $(call TMX2DATA,CONVERT,assets/map0.tmx,map0))

- Editar el archivo "compression.mk" y añadir las líneas...
    $(eval $(call ADD2PACK,mappk0,src/map0.bin))
    $(eval $(call PACKZX7B,mappk0,src/map/))

- Hacer "make clean" y "make"

- Ver el tamaño descomprimido en decimal de nuestro mapa, en el archivo "mappk0.h"

- Convertir con la calcu el tamaño en hexadecimal, y sumarle el valor de UNPACKED_MAP_INI

- Guardar el resultado de la suma en UNPACKED_MAP_END

- Así quedaría el archivo "main.c"...
    #include "map/mappk0.h"
    #define UNPACKED_MAP_INI (u8*)(0x1031) // the music ends at 0x1030
    #define UNPACKED_MAP_END (u8*)(0x1530) // the program starts at 0x1621

    cpct_zx7b_decrunch_s(UNPACKED_MAP_END, mappk0_end); 
    cpct_etm_drawTilemap2x4(MAP_W, MAP_H, cpctm_screenPtr(CPCT_VMEM_START, 0, ORIG_MAP_Y), UNPACKED_MAP_INI);

- Editar el parámetro Z80CODELOC del archivo "build_config.mk" para que comience 
  en la posición de memoria más baja posible, es decir, 1 byte por encima de UNPACKED_MAP_END




Modificar mapa:

Dado que tienes 40 columnas (x) y 36 filas (y), y los índices de fila y columna comienzan en 0, puedes utilizar la siguiente 
fórmula para calcular la posición de memoria: Posición de memoria = (fila * número total de columnas) + columna

// set the map tile number of a certain XY position
void SetTile(u8 x, u8 y, u8 tileNumber) {
	u8* memPos = UNPACKED_MAP_INI + (y * MAP_W + x);
	*memPos = tileNumber;
}


VSC: Cambiar fondo a negro:
"workbench.colorCustomizations": {
    "editor.background": "#000000"
}